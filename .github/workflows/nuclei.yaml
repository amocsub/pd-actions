name: "nuclei"

on:
  workflow_dispatch:
    inputs:
      input_filename:
        description: "File name with all the urls to scan"
        #default: "output/active-urls.txt"
      output_filename:
        description: "Where to put the results"
        #default: "output/nuclei-output.txt"
      amount_of_workers:
        description: "How many workers should be used, max 256 per matrix"
        #default: "5"
      nuclei_config:
        description: "Nuclei configfile"
        #default: "config/nuclei/general.yaml"
  # schedule:
  #   # * is a special character in YAML so you have to quote this string
  #   - cron:  '30 5,17 * * *'

jobs:
  split:
    runs-on: pd-actions
    outputs:
      splited_files: ${{ steps.split.outputs.splited_files }}
    steps:
    - uses: actions/checkout@v3
    - id: split
      run: |
        mkdir -p workspace/split && rm -rf workspace/split/*
        lines_per_file=$((($(wc -l < "${{ github.event.inputs.input_filename || 'output/active-urls.txt' }}") + ${{ github.event.inputs.amount_of_workers || '5'}} - 1) / ${{ github.event.inputs.amount_of_workers || '5'}}))
        split -l ${lines_per_file} "${{ github.event.inputs.input_filename || 'output/active-urls.txt' }}" workspace/split/
        files_array=$(find workspace/split/* -printf "%f\n" | jq -R -s -c 'split("\n")[:-1]')
        echo "splited_files=${files_array}" >> $GITHUB_OUTPUT
        gcloud storage cp workspace/split/* gs://pd-actions-bucket/runs/${{ github.run_id }}/split/

  nuclei:
    needs: split
    runs-on: pd-actions
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        file: ${{ fromJson(needs.split.outputs.splited_files) }}
    steps:
    - uses: actions/checkout@v3
    - run: |
        gcloud storage cp gs://pd-actions-bucket/runs/${{ github.run_id }}/split/${{ matrix.file }} workspace/active-urls-to-scan.txt
        nuclei -config ${{ github.event.inputs.nuclei_config || 'config/nuclei/general.yaml'}}
        gcloud storage cp workspace/nuclei-output gs://pd-actions-bucket/runs/${{ github.run_id }}/nuclei/nuclei-output-${{ matrix.file }}
      
  merge_save:
    needs: nuclei
    runs-on: pd-actions
    if: ${{ always() && contains(needs.*.result, 'success') }}
    steps:
    - uses: actions/checkout@v3
    - run: |
        gcloud storage cp "gs://pd-actions-bucket/runs/${{ github.run_id }}/nuclei/*" workspace/
        cat workspace/nuclei-output-* | anew ${{ github.event.inputs.output_filename || 'output/nuclei-output.txt' }} > workspace/new-nuclei-output.txt
        git add ${{ github.event.inputs.output_filename || 'output/nuclei-output.txt' }}
        git config --local user.email "${{ secrets.GLOBAL_GITHUB_EMAIL }}"
        git config --global user.name "${{ secrets.GLOBAL_GITHUB_USER }}"
        git commit -m "${{ github.workflow }} - Run ${{ github.run_id }}" -a --allow-empty
        git push -f

  alert:
    needs: [split, nuclei, merge_save]
    runs-on: pd-actions
    if: ${{ always() && !contains(needs.*.result, 'success') }}
    steps:
    - run: |
        curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
          -H "Content-type: application/json" \
          -d '{ "text": "Github Actions Workflow ${{ github.workflow }} status failure - <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Link>" }'
      